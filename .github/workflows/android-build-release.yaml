name: Auto Increment Tag & Build APK

on:
  push:
    branches:
    - master

jobs:
  increment_tag:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.bump_version.outputs.new_tag }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get latest tag
      id: get_latest_tag
      run: |
        LATEST_TAG=$(git describe --tags --abbrev=0 || echo "v0.0.0")
        echo "Latest tag: $LATEST_TAG"
        echo "latest_tag=$LATEST_TAG" >> $GITHUB_ENV

    - name: Bump version
      id: bump_version
      run: |
        LATEST_TAG=${{ env.latest_tag }}
        if [[ $LATEST_TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          VERSION_PARTS=(${LATEST_TAG//./ })
          MAJOR=${VERSION_PARTS[0]:1}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}
          
          PATCH=$((PATCH + 1))

          NEW_TAG="v$MAJOR.$MINOR.$PATCH"
          echo "New tag: $NEW_TAG"
          echo "new_tag=$NEW_TAG" >> $GITHUB_ENV
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT
        else
          echo "LATEST_TAG does not follow the expected versioning format vMAJOR.MINOR.PATCH"
          exit 1
        fi

    - name: Create and push new tag
      env:
        GH_PAT: ${{ secrets.GH_PAT }}
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        git remote set-url origin https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}.git
        git tag ${{ env.new_tag }}
        git push origin ${{ env.new_tag }}

  build:
    name: Build APK & Release
    needs: increment_tag
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Grant execute permission to Gradle
      run: chmod +x gradlew

    - name: Build APK
      run: ./gradlew assembleRelease

    - name: Find APK Path
      id: apk_path
      run: echo "APK_PATH=$(find app/build/outputs/apk/release -name '*.apk' | head -1)" >> $GITHUB_ENV

    - name: Upload APK as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: release-apk
        path: ${{ env.APK_PATH }}

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download APK Artifact
      uses: actions/download-artifact@v4
      with:
        name: release-apk
        path: app/build/outputs/apk/release/

    - name: Get APK Filename
      id: get_apk_name
      run: echo "APK_NAME=$(basename $(find app/build/outputs/apk/release -name '*.apk' | head -1))" >> $GITHUB_ENV

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ needs.increment_tag.outputs.new_tag }}
        files: app/build/outputs/apk/release/${{ env.APK_NAME }}
        body: "Automated release of version ${{ needs.increment_tag.outputs.new_tag }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
